// proto/core/_store/v1/store.proto

syntax = "proto3";

package proto.core._store.v1;

// /usr/local/include/google/protobuf/
// import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
// import "google/api/http.proto";
// import "google/protobuf/any.proto";
// import "google/protobuf/duration.proto";
// import "google/protobuf/empty.proto";
// import "google/protobuf/field_mask.proto";
// import "google/protobuf/struct.proto";
// import "google/protobuf/timestamp.proto";
// import "google/protobuf/wrappers.proto";
// import "google/rpc/status.proto";
import "validate/validate.proto";

option go_package = "x-gwi/proto/core/_store/v1;store_pb";

// StoreIDX (uuid, revision) optional
message StoreIDX {
  reserved 1, 2, 3;

  // kind
  string kind = 4 [
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).string = { ignore_empty: true, max_len: 128 }
  ];

  // uid
  string uid = 5 [
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).string = { ignore_empty: true, max_len: 128 }
  ];

  // rev - revision string
  string rev = 6 [
    json_name = "rev",
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).string = { ignore_empty: true, max_len: 128 }
  ];

  // uuid
  string uuid = 7 [
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).string = { ignore_empty: true, uuid: true }
  ];

  // rev_n - revision number
  optional int64 rev_n = 8 [
    (google.api.field_behavior) = IMMUTABLE,
    (validate.rules).int64 = { ignore_empty: true, gte: 1 }
  ];

  // aql - MetaDocAQL
  optional MetaDocAQL aql = 10 [
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).message = { required: false, skip: false }
  ];
}

// MetaDocAQL - ArangoDB DocumentMeta
// DocumentMeta contains all meta data used to identifier a document.
// type DocumentMeta struct {
// 	Key    string     `json:"_key,omitempty"`
// 	ID     DocumentID `json:"_id,omitempty"`
// 	Rev    string     `json:"_rev,omitempty"`
// 	OldRev string     `json:"_oldRev,omitempty"`
// }
//
// DocumentID references a document in a collection.
// Format: collection/_key
// type DocumentID string
//
// ArangoID is a generic Arango ID struct representation
// type ArangoID struct {
// 	ID               string `json:"id,omitempty"`
// 	GloballyUniqueId string `json:"globallyUniqueId,omitempty"`
// }
//
// REV rev = 4 [json_name = "_rev"];
message MetaDocAQL {
  reserved 1, 2, 3;

  // key - _key
  string key = 4 [
    json_name = "_key",
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).string = { ignore_empty: true, max_len: 128 }
  ];

  // id - DocumentID string Format: collection/_key
  string id = 5 [
    json_name = "_id",
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).string = { ignore_empty: true, max_len: 128 }
  ];

  // rev - revision string
  string rev = 6 [
    json_name = "_rev",
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).string = { ignore_empty: true, max_len: 128 }
  ];

  // old_rev - old revision string
  string old_rev = 7 [
    json_name = "_oldRev",
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = OPTIONAL,
    (validate.rules).string = { ignore_empty: true, max_len: 128 }
  ];
}

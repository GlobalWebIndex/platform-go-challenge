# https://github.com/golangci/golangci-lint/blob/master/.golangci.reference.yml

# Options for analysis running.
run:
  # The default concurrency value is the number of available CPU.
  # concurrency: 4

  # Timeout for analysis, e.g. 30s, 5m.
  # Default: 1m
  timeout: 10m

  # Exit code when at least one issue was found.
  # Default: 1
  issues-exit-code: 0

  # Include test files or not.
  # Default: true
  tests: false

  # List of build tags, all linters use it.
  # Default: [].
  # build-tags:
  #   - mytag

  # Which dirs to skip: issues from them won't be reported.
  # Can use regexp here: `generated.*`, regexp is applied on full path,
  # including the path prefix if one is set.
  # Default value is empty list,
  # but default dirs are skipped independently of this option's value (see skip-dirs-use-default).
  # "/" will be replaced by current OS file path separator to properly work on Windows.
  skip-dirs:
    - proto
    - test

  # Enables skipping of directories:
  # - vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  # Default: true
  # skip-dirs-use-default: false

# All available settings of specific linters.
linters-settings:
  errcheck:
    # Report about not checking of errors in type assertions: `a := b.(MyStruct)`.
    # Such cases aren't reported by default.
    # Default: false
    check-type-assertions: true

  godot:
    # Comments to be checked: `declarations`, `toplevel`, or `all`.
    # Default: declarations
    # scope: toplevel
    # List of regexps for excluding particular comment lines from check.
    # Default: []
    # exclude:
      # Exclude todo and fixme comments.
      # - "^fixme:"
      # - "^todo:"
    # Check that each sentence ends with a period.
    # Default: true
    period: false
    # Check that each sentence starts with a capital letter.
    # Default: false
    # capital: true

  govet:
    # Report about shadowed variables.
    # Default: false
    check-shadowing: true

    # Enable all analyzers.
    # Default: false
    enable-all: true
    # Disable analyzers by name.
    # Run `go tool vet help` to see all analyzers.
    # Default: []
    # disable:
    #   - asmdecl
    #   - assign
    #   - atomic
    #   - atomicalign
    #   - bools
    #   - buildtag
    #   - cgocall
    #   - composites
    #   - copylocks
    #   - deepequalerrors
    #   - errorsas
    #   - fieldalignment
    #   - findcall
    #   - framepointer
    #   - httpresponse
    #   - ifaceassert
    #   - loopclosure
    #   - lostcancel
    #   - nilfunc
    #   - nilness
    #   - printf
    #   - reflectvaluecompare
    #   - shadow
    #   - shift
    #   - sigchanyzer
    #   - sortslice
    #   - stdmethods
    #   - stringintconv
    #   - structtag
    #   - testinggoroutine
    #   - tests
    #   - unmarshal
    #   - unreachable
    #   - unsafeptr
    #   - unusedresult
    #   - unusedwrite

  maligned:
    # Print struct with more effective memory layout or not.
    # Default: false
    suggest-new: true

# INFO [lintersdb] Active 9 linters: [deadcode errcheck gosimple govet ineffassign staticcheck typecheck unused varcheck] 
linters:
  # Disable all linters.
  # Default: false
  # disable-all: true
  # Enable specific linter
  # https://golangci-lint.run/usage/linters/#enabled-by-default-linters
  # enable:
    # - 
  # Enable all available linters.
  # Default: false
  enable-all: true
  # Disable specific linter
  # https://golangci-lint.run/usage/linters/#disabled-by-default-linters--e--enable
  disable:
    # - asasalint
    # - asciicheck
    # - bidichk
    # - bodyclose
    # - containedctx
    # - contextcheck
    # - cyclop
    - deadcode # default deprecated replaced by unused
    # - decorder
    - depguard # ensure config
    # - dogsled
    # - dupl
    # - durationcheck
    # - errcheck # default
    # - errchkjson
    # - errname
    # - errorlint
    # - execinquery
    # - exhaustive
    - exhaustivestruct # is deprecated
    # - exhaustruct
    # - exportloopref
    # - forbidigo
    # - forcetypeassert
    # - funlen
    - gci # is deprecated
    # - gochecknoglobals
    # - gochecknoinits
    # - gocognit
    # - goconst
    # - gocritic
    # - gocyclo
    # - godot
    # - godox
    # - goerr113
    # - gofmt
    - gofumpt
    # - goheader
    # - goimports
    - golint # is deprecated
    # - gomnd
    # - gomoddirectives
    # - gomodguard
    # - goprintffuncname
    # - gosec # err on int global from separate file
    # - gosimple # default
    # - govet
    # - grouper
    - ifshort # is deprecated
    - importas # no aliases listed
    # - ineffassign # default
    - interfacer # is deprecated
    # - ireturn
    # - lll
    # - maintidx
    # - makezero
    - maligned # is deprecated
    # - misspell
    # - nakedret
    # - nestif
    # - nilerr
    # - nilnil
    # - nlreturn
    # - noctx
    # - nolintlint
    # - nonamedreturns
    - nosnakecase # deprecated replaced by revive(var-naming)
    # - nosprintfhostport
    # - paralleltest
    # - prealloc
    # - predeclared
    # - promlinter
    # - revive
    # - rowserrcheck
    - scopelint # is deprecated
    # - sqlclosecheck
    # - staticcheck # default
    - structcheck # deprecated replaced by unused
    # - stylecheck
    # - tagliatelle
    # - tenv
    # - testpackage
    # - thelper
    # - tparallel
    # - typecheck # default
    # - unconvert
    # - unparam
    # - unused # default
    - usestdlibvars # error: unknown = dont swith on
    - varcheck # default deprecated replaced by unused
    - varnamelen # - verbosity
    # - wastedassign
    # - whitespace
    # - wrapcheck
    # - wsl

  # Enable presets.
  # https://golangci-lint.run/usage/linters
  # presets:
  #   - bugs
  #   - comment
  #   - complexity
  #   - error
  #   - format
  #   - import
  #   - metalinter
  #   - module
  #   - performance
  #   - sql
  #   - style
  #   - test
  #   - unused

  # Run only fast linters from enabled linters set (first run won't be fast)
  # Default: false
  # fast: true


issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec

    # Exclude `lll` issues for long lines with `go:generate`.
    - linters:
        - lll
      source: "^//go:generate "

  # Maximum issues count per one linter.
  # Set to 0 to disable.
  # Default: 50
  max-issues-per-linter: 0

  # Maximum count of issues with the same text.
  # Set to 0 to disable.
  # Default: 3
  max-same-issues: 0

